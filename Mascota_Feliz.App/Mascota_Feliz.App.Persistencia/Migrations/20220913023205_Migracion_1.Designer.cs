// <auto-generated />
using System;
using Mascota_Feliz.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mascota_Feliz.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220913023205_Migracion_1")]
    partial class Migracion_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Historia_Clinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Fecha_Apertura_HC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mascotaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("mascotaid");

                    b.ToTable("historias_clinica");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Mascota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("medico_veterinarioid")
                        .HasColumnType("int");

                    b.Property<int?>("propietarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("medico_veterinarioid");

                    b.HasIndex("propietarioid");

                    b.ToTable("mascotas");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Medico_Veterinario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos_Veterinario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Veterinario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Veterinario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarjeta_Profesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Veterinario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("veterinarios");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Propietario_Mascota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo_Electronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("propietarios");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Visita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado_de_animo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha_Visita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Frecuencia_Cardiaca")
                        .HasColumnType("float");

                    b.Property<double>("Frecuencia_Respiratoria")
                        .HasColumnType("float");

                    b.Property<string>("Medicamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Recomendaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<int?>("historia_clinicaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("historia_clinicaid");

                    b.ToTable("visitas");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Historia_Clinica", b =>
                {
                    b.HasOne("Mascota_Feliz.App.Dominio.Mascota", "mascota")
                        .WithMany()
                        .HasForeignKey("mascotaid");

                    b.Navigation("mascota");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Mascota", b =>
                {
                    b.HasOne("Mascota_Feliz.App.Dominio.Medico_Veterinario", "medico_veterinario")
                        .WithMany()
                        .HasForeignKey("medico_veterinarioid");

                    b.HasOne("Mascota_Feliz.App.Dominio.Propietario_Mascota", "propietario")
                        .WithMany()
                        .HasForeignKey("propietarioid");

                    b.Navigation("medico_veterinario");

                    b.Navigation("propietario");
                });

            modelBuilder.Entity("Mascota_Feliz.App.Dominio.Visita", b =>
                {
                    b.HasOne("Mascota_Feliz.App.Dominio.Historia_Clinica", "historia_clinica")
                        .WithMany()
                        .HasForeignKey("historia_clinicaid");

                    b.Navigation("historia_clinica");
                });
#pragma warning restore 612, 618
        }
    }
}
